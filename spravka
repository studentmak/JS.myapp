"Переменные"

let – это современный способ объявления переменной
var – это устаревший способ объявления переменной
const – похоже на let, но значение переменной не может изменяться.

let название переменной = "значение переменной"
let user = 1

"Взаимодействие: alert, prompt, confirm"

alert - показывает сообщение и ждёт, пока пользователь нажмёт кнопку «ОК».

prompt - показывает сообщение и запрашивает ввод текста от пользователя. 
         Возвращает напечатанный в поле ввода текст или null, если была нажата кнопка «Отмена» или Esc с клавиатуры.

confirm - показывает сообщение и ждёт, пока пользователь нажмёт OK или Отмена. 
          Возвращает true, если нажата OK, и false, если нажата кнопка «Отмена» или Esc с клавиатуры.

aletr = ('Hello')

название переменной = функция(текст отображаемый в всплывающем окне, 
[Необязательный второй параметр, который устанавливает начальное значение в поле для текста в окне.])

result = prompt(title, [default])

Функция confirm отображает модальное окно с текстом вопроса question и двумя кнопками: OK и Отмена.
Результат – true, если нажата кнопка OK. В других случаях – false

result = confirm(question)


"Условное ветвление: if, '?' "

if - Инструкция if(...) вычисляет условие в скобках и, если результат true, то выполняет блок кода.

Пример:
let year = prompt('В каком году была опубликована спецификация ECMAScript-2015?', '');
if (year == 2015) alert( 'Вы правы!' )

Если мы хотим выполнить более одной инструкции, то нужно заключить блок кода в фигурные скобки

Пример:
if (year == 2022) {
  alert( "Правильно!" );
  alert( "Довольно-таки неплохо!" );
}
Рекомендуется использовать фигурные скобки {} всегда, когда вы используете инструкцию if,
даже если выполняется только одна команда. Это улучшает читабельность кода.

Блок "else"

Инструкция if может содержать необязательный блок «else» («иначе»). Он выполняется, когда условие ложно.

Пример:
let year = prompt('В каком году была опубликована спецификация ECMAScript-2015?', '');
if (year == 2015) {
  alert( 'Да, верно!' );
} else {
  alert( 'Ответ неверный!' ); // любое значение, кроме 2015
}

Несколько условий: "else if"

Иногда, нужно проверить несколько вариантов условия. Для этого используется блок else if.
Пример:
let year = prompt('В каком году была опубликована спецификация ECMAScript-2015?', '');
if (year < 2015) {
  alert( 'Это слишком рано...' );
} else if (year > 2015) {
  alert( 'Это поздновато' );
} else {
  alert( 'Верно!' );
}
В приведённом выше коде JavaScript сначала проверит year < 2015. 
Если это неверно, он переходит к следующему условию year > 2015. Если оно тоже ложно, тогда сработает последний alert.

"Циклы"
for - Проверяет условие перед каждой итерацией, есть возможность задать дополнительные настройки.
Пример:

for (начало; условие; шаг) {
... тело цикла ...
}

for (let i = 0; i < 3; i++) { // выведет 0, затем 1, затем 2
  alert(i);
}

начало	i = 0	Выполняется один раз при входе в цикл
условие	i < 3	Проверяется перед каждой итерацией цикла. Если оно вычислится в false, цикл остановится.
шаг	i++	Выполняется после тела цикла на каждой итерации перед проверкой условия.
тело	alert(i)	Выполняется снова и снова, пока условие вычисляется в true.

В примере переменная счётчика i была объявлена прямо в цикле. 
Это так называемое «встроенное» объявление переменной. Такие переменные существуют только внутри цикла

Вместо объявления новой переменной можyj использовать уже существующую:

let i = 0;

for (i = 0; i < 3; i++) { // используем существующую переменную
  alert(i); // 0, 1, 2
}

alert(i); // 3, переменная доступна, т.к. была объявлена снаружи цикла

Любая часть for может быть пропущена.
Для примера, мы можем пропустить начало если нам ничего не нужно делать перед стартом цикла.
Вот так:

let i = 0; // мы уже имеем объявленную i с присвоенным значением
for (; i < 3; i++) { // нет необходимости в "начале"
  alert( i ); // 0, 1, 2
}











